{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { newProductReducer, newReviewReducer, productDetailsReducer, productReducer, productReviewsReducer, productsReducer, reviewReducer } from \"./reducers/productReducer\";\nimport { allUsersReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from \"./reducers/userReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { allOrdersReducer, myOrdersReducer, newOrderReducer, orderDetailsReducer, orderReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  user: userReducer,\n  profile: profileReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  newReview: newReviewReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    shippingInfo: localStorage.getItem(\"shippingInfo\") ? JSON.parse(localStorage.getItem(\"shippingInfo\")) : {}\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","newProductReducer","newReviewReducer","productDetailsReducer","productReducer","productReviewsReducer","productsReducer","reviewReducer","allUsersReducer","forgotPasswordReducer","profileReducer","userDetailsReducer","userReducer","cartReducer","allOrdersReducer","myOrdersReducer","newOrderReducer","orderDetailsReducer","orderReducer","reducer","products","productDetails","user","profile","forgotPassword","cart","newOrder","myOrders","orderDetails","newReview","newProduct","product","allOrders","order","allUsers","userDetails","productReviews","review","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"sources":["C:/projects/ecommercesite/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  newProductReducer,\r\n  newReviewReducer,\r\n  productDetailsReducer,\r\n  productReducer,\r\n  productReviewsReducer,\r\n  productsReducer,\r\n  reviewReducer,\r\n} from \"./reducers/productReducer\";\r\n\r\nimport {\r\n  allUsersReducer,\r\n  forgotPasswordReducer,\r\n  profileReducer,\r\n  userDetailsReducer,\r\n  userReducer,\r\n} from \"./reducers/userReducer\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  allOrdersReducer,\r\n  myOrdersReducer,\r\n  newOrderReducer,\r\n  orderDetailsReducer,\r\n  orderReducer,\r\n} from \"./reducers/orderReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  products: productsReducer,\r\n  productDetails: productDetailsReducer,\r\n  user: userReducer,\r\n  profile: profileReducer,\r\n  forgotPassword: forgotPasswordReducer,\r\n  cart: cartReducer,\r\n  newOrder: newOrderReducer,\r\n  myOrders: myOrdersReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  newReview: newReviewReducer,\r\n  newProduct: newProductReducer,\r\n  product: productReducer,\r\n  allOrders: allOrdersReducer,\r\n  order: orderReducer,\r\n  allUsers: allUsersReducer,\r\n  userDetails: userDetailsReducer,\r\n  productReviews: productReviewsReducer,\r\n  review: reviewReducer,\r\n});\r\n\r\nlet initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [],\r\n    shippingInfo: localStorage.getItem(\"shippingInfo\")\r\n      ? JSON.parse(localStorage.getItem(\"shippingInfo\"))\r\n      : {},\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,iBAAiB,EACjBC,gBAAgB,EAChBC,qBAAqB,EACrBC,cAAc,EACdC,qBAAqB,EACrBC,eAAe,EACfC,aAAa,QACR,2BAA2B;AAElC,SACEC,eAAe,EACfC,qBAAqB,EACrBC,cAAc,EACdC,kBAAkB,EAClBC,WAAW,QACN,wBAAwB;AAE/B,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SACEC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,mBAAmB,EACnBC,YAAY,QACP,yBAAyB;AAEhC,MAAMC,OAAO,GAAGtB,eAAe,CAAC;EAC9BuB,QAAQ,EAAEd,eAAe;EACzBe,cAAc,EAAElB,qBAAqB;EACrCmB,IAAI,EAAEV,WAAW;EACjBW,OAAO,EAAEb,cAAc;EACvBc,cAAc,EAAEf,qBAAqB;EACrCgB,IAAI,EAAEZ,WAAW;EACjBa,QAAQ,EAAEV,eAAe;EACzBW,QAAQ,EAAEZ,eAAe;EACzBa,YAAY,EAAEX,mBAAmB;EACjCY,SAAS,EAAE3B,gBAAgB;EAC3B4B,UAAU,EAAE7B,iBAAiB;EAC7B8B,OAAO,EAAE3B,cAAc;EACvB4B,SAAS,EAAElB,gBAAgB;EAC3BmB,KAAK,EAAEf,YAAY;EACnBgB,QAAQ,EAAE1B,eAAe;EACzB2B,WAAW,EAAExB,kBAAkB;EAC/ByB,cAAc,EAAE/B,qBAAqB;EACrCgC,MAAM,EAAE9B;AACV,CAAC,CAAC;AAEF,IAAI+B,YAAY,GAAG;EACjBb,IAAI,EAAE;IACJc,SAAS,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACxCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;IACNG,YAAY,EAAEJ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,GAC9CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,GAChD,CAAC;EACP;AACF,CAAC;AAED,MAAMI,UAAU,GAAG,CAAC9C,KAAK,CAAC;AAE1B,MAAM+C,KAAK,GAAGlD,WAAW,CACvBuB,OAAO,EACPmB,YAAY,EACZtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}